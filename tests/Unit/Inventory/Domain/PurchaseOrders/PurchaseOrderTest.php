<?php

namespace Tests\Unit\Inventory\Domain\PurchaseOrders;

use App\Inventory\Domain\PurchaseOrders\CreatePurchaseOrder;
use App\Inventory\Domain\PurchaseOrders\PurchaseOrderLine;
use Tests\TestCase;

class PurchaseOrderTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function it_should_calculate_total_amount_in_euros()
    {
        // Given
        $purchaseOrder = CreatePurchaseOrder::concept();

        // When
        $expectedTotalAmountInEuros = $purchaseOrder->purchaseOrderLines()->sum(function (PurchaseOrderLine $purchaseOrderLine) {
            return $purchaseOrderLine->quantity() * $purchaseOrderLine->price();
        });

        // Then
        self::assertEquals($expectedTotalAmountInEuros, $purchaseOrder->totalAmountInEuros());
    }
}
